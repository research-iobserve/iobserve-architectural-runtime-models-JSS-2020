apply plugin: 'application'

mainClassName='org.iobserve.service.cli.AnalysisMain'

dependencies {
	compile project(":analysis")
	compile "com.beust:jcommander:1.60"
}

install {
    repositories.mavenInstaller {
        pom.version = version
        pom.groupId = 'org.iobserve'
        pom.artifactId = 'analysis.cli'
    }
}

ext {
	toolsDir = "../tools/"
	toolPcmLoader = "eclipse_lib_loader.jar"
	toolPcmLoaderConfigFile = "config_eclipse_lib_loader.xml"
	
	pcm_working_dir = 'res/working_dir/pcm'
	pcm_original_dir = 'res/original_dir/pcm'
}

task loadPcmLibraries(type : Exec) {
	String command = "java -jar $toolsDir$toolPcmLoader --config=$toolsDir$toolPcmLoaderConfigFile"
	println "running pcm-lib-loader -> $command"
	
	workingDir '.'
	commandLine 'cmd', '/c', command
	standardOutput = System.out
} 

task cleanPcmWorkingDir(type: Delete) {
	delete pcm_working_dir
}

task copyPcmToWorkingDir(type: Copy) {
	dependsOn << cleanPcmWorkingDir
	from pcm_original_dir
	into pcm_working_dir
}

task runAnalysis(type: JavaExec) {
	dependsOn << compileJava
	dependsOn << copyPcmToWorkingDir
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.iobserve.service.cli.AnalysisMain'
	args '-i /data/cocome -c /home/reiner/Projects/iObserve/cocomePcmModel/ -p /home/reiner/Projects/iObserve/cocomePcmModel/'
}
